version: '3.4'
services:
  eventgate01:
    build:
      context: ./
      dockerfile: ./Dockerfile-eventgate
    container_name: eventgate01
    volumes:
      - ./src/mediawiki-event-schemas:/srv/event-schemas
    ports:
      - 8192:8192
  mjolnir_msearch:
    build:
      context: ./
      dockerfile: ./Dockerfile-mjolnir
    container_name: mjolnir_msearch
    command: mjolnir-utilities.py kafka_msearch_daemon --brokers kafka:9092 --elastic-endpoint http://elastic:9200 --input-topic mjolnir_msearch_request --output-topic mjolnir_msearch_response --group-id mjolnir_msearch
    depends_on:
      - elastic
      - kafka
  mjolnir_bulk:
    build:
      context: ./
      dockerfile: ./Dockerfile-mjolnir
    container_name: mjolnir_bulk
    environment:
      # TODO: This is duped in etc/swift_auth.env that the analytics side uses
      - ST_AUTH_VERSION=1
      - ST_AUTH=http://swift:8080/auth/v1.0
      - ST_USER=test:tester
      - ST_KEY=testing
    command: mjolnir-utilities.py kafka_bulk_daemon --brokers kafka:9092 --es-clusters elastic:9200 --topic mjolnir_bulk --group-id mjolnir_bulk --topic dc1.swift.search_glent.upload-complete
    depends_on:
      - elastic
      - kafka
      - swift
  elastic:
    build:
        context: ./
        dockerfile: ./Dockerfile-wmfelastic
    container_name: elastic
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  swift:
    image: bouncestorage/swift-aio:latest
    container_name: swift
    ports:
      - 8808:8080
    volumes:
      - swiftdata01:/swift/nodes
  zookeeper:
    image: bitnami/zookeeper:3
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  airflow:
    build:
      context: ./
      dockerfile: ./Dockerfile-wmfairflow
    container_name: airflow
    command: /usr/local/bin/start-airflow.sh
    volumes:
      - ./src/wikimedia-discovery-analytics:/src/wikimedia-discovery-analytics
      - ./src/analytics-refinery:/src/analytics-refinery
    ports:
      - 8778:8080
    depends_on:
      - initenv
      - kafka
      - swift
  initenv:
    build:
      context: ./
      dockerfile: ./Dockerfile-initenv
    container_name: initenv
    command: /usr/local/bin/init-hive-state.sh
    volumes:
      - ./src/wikimedia-discovery-analytics:/src/wikimedia-discovery-analytics
      - ./src/analytics-refinery:/src/analytics-refinery
volumes:
  elasticdata01: {}
  swiftdata01: {}
